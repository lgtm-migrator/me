{
  "name": "me",
  "author": {
    "name": "Randy Tarampi",
    "email": "rt@randytarampi.ca",
    "url": "https://www.randytarampi.ca"
  },
  "bugs": "https://github.com/randytarampi/me/issues",
  "dependencies": {
    "@babel/cli": "^7.17.6",
    "@babel/core": "^7.17.9",
    "@babel/plugin-proposal-class-properties": "^7.16.7",
    "@babel/plugin-proposal-object-rest-spread": "^7.17.3",
    "@babel/plugin-transform-property-literals": "^7.16.7",
    "@babel/polyfill": "^7.12.1",
    "@babel/preset-env": "^7.16.11",
    "@babel/preset-react": "^7.16.7",
    "@babel/register": "^7.17.7",
    "babel-eslint": "^10.1.0",
    "babel-loader": "^8.2.5",
    "babel-plugin-istanbul": "^6.1.1",
    "babel-plugin-lodash": "^3.3.4",
    "babel-plugin-minify-replace": "^0.5.0",
    "chokidar": "^3.5.3",
    "codeclimate-test-reporter": "^0.5.1",
    "commander": "^6.2.1",
    "config": "^3.3.7",
    "connect-history-api-fallback": "^1.6.0",
    "copy-webpack-plugin": "^7.0.0",
    "coveralls": "^3.1.1",
    "cross-env": "^7.0.3",
    "css-loader": "^5.2.7",
    "del": "^6.0.0",
    "eslint": "^7.32.0",
    "eslint-plugin-import": "^2.26.0",
    "eslint-plugin-react": "^7.29.4",
    "expose-loader": "^1.0.3",
    "file-loader": "^6.2.0",
    "gulp": "^4.0.2",
    "gulp-autoprefixer": "^7.0.1",
    "gulp-clean-css": "^4.3.0",
    "gulp-concat": "^2.6.1",
    "gulp-eslint": "^6.0.0",
    "gulp-if": "^3.0.0",
    "gulp-mocha": "^7.0.2",
    "gulp-pug": "^4.0.1",
    "gulp-pug-linter": "^1.5.0",
    "gulp-sass": "^4.1.1",
    "gulp-sass-lint": "^1.4.0",
    "gulp-sourcemaps": "^3.0.0",
    "history": "^4.10.1",
    "html-webpack-harddisk-plugin": "^1.0.2",
    "html-webpack-plugin": "^4.5.2",
    "js-yaml": "^3.14.1",
    "json-stringify-safe": "^5.0.1",
    "junit-merge": "^2.0.0",
    "lerna": "^4.0.0",
    "lodash": "^4.17.21",
    "mini-css-extract-plugin": "^1.6.2",
    "npm-check-updates": "^10.3.1",
    "nyc": "^15.1.0",
    "optimize-css-assets-webpack-plugin": "^5.0.8",
    "postcss": "^8.4.12",
    "postcss-loader": "^4.3.0",
    "postcss-preset-env": "^6.7.1",
    "pug": "^3.0.2",
    "pug-loader": "^2.4.0",
    "resolve-url-loader": "^3.1.4",
    "sass-loader": "^10.2.1",
    "semver-compare": "^1.0.0",
    "sinon": "^9.2.4",
    "snyk": "^1.912.0",
    "svg-path-loader": "^0.0.4",
    "syncpack": "^5.8.15",
    "terser-webpack-plugin": "^5.3.1",
    "vinyl-paths": "^3.0.1",
    "webpack": "^5.72.0",
    "webpack-bundle-analyzer": "^4.5.0",
    "webpack-cli": "^4.9.2",
    "webpack-dev-server": "^3.11.3",
    "webpack-node-externals": "^2.5.2",
    "webpack-sentry-plugin": "^2.0.3",
    "workbox-webpack-plugin": "^6.5.3",
    "ws": "^7.5.7",
    "yargs": "^16.2.0"
  },
  "engines": {
    "node": ">=12",
    "yarn": ">=1"
  },
  "private": true,
  "repository": "randytarampi/me.git",
  "scripts": {
    "bootstrap": "yarn lerna bootstrap",
    "check-run-reporter:actual": "curl \"https://api.check-run-reporter.com/api/v1/submissions\" --user $CHECK_RUN_REPORTER_TOKEN -X POST",
    "check-run-reporter:pretest": "yarn run check-run-reporter:actual -- -F report=@\"./pretest-results.xml\" -F label=\"pretest\" -F sha=\"$COMMIT_SHA\" -F root=\"$(pwd)\"",
    "check-run-reporter:test": "yarn run check-run-reporter:actual -- -F report=@\"./test-results.xml\" -F label=\"test\" -F sha=\"$COMMIT_SHA\" -F root=\"$(pwd)\"",
    "clean": "./bin/clean.sh",
    "cover": "yarn run cover:actual; yarn run cover:collect",
    "cover:actual": "rm -rf .nyc_output/ coverage/ && lerna run cover --no-bail --concurrency $(node -p \"require(\\\"os\\\").cpus().length\")",
    "cover:actual:collect:lcov": "mkdir -p .nyc_output/ coverage/ && lerna exec -- \"if [ -d \"./.nyc_output\" ]; then cp -r .nyc_output ../..; fi;\" && nyc report --reporter=lcov",
    "cover:collect": "yarn run test:collect; yarn run cover:actual:collect:lcov",
    "coveralls": "cat coverage/lcov.info | coveralls",
    "install": "./bin/install.sh",
    "kill": "lerna run kill",
    "ncu": "lerna --concurrency=1 exec ncu",
    "prepare": "yarn run snyk-protect && ./bin/prepare.sh",
    "pretest": "yarn run pretest:actual; yarn run pretest:collect",
    "pretest:actual": "cross-env-shell NODE_ENV=test lerna run pretest --no-bail --concurrency $(node -p \"require(\\\"os\\\").cpus().length\")",
    "pretest:actual:collect": "junit-merge $(ls packages/*/{eslint,sassLint}-results.xml) --out ./pretest-results.xml",
    "pretest:collect": "yarn run pretest:actual:collect",
    "pretest:service:dynamodb-local": "bin/pretest:service:dynamodb-local.sh",
    "start:service": "lerna run start --stream --scope=@randy.tarampi/service",
    "start:web": "lerna run start --stream --scope=@randy.tarampi/{service,www}",
    "start:www": "lerna run start --stream --scope=@randy.tarampi/www",
    "test": "yarn run test:actual; yarn run test:collect",
    "test:actual": "cross-env-shell NODE_ENV=test lerna run test --no-bail --concurrency $(node -p \"require(\\\"os\\\").cpus().length\")",
    "test:actual:collect": "junit-merge $(ls packages/*/test-results.xml) --out ./test-results.xml",
    "test:collect": "yarn run test:actual:collect",
    "snyk-protect": "snyk protect"
  },
  "workspaces": [
    "packages/*"
  ],
  "snyk": false
}
